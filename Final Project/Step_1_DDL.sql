SET SERVEROUT ON;


CREATE TABLE CUSTOMER (
    CUSTOMER_ID  NUMBER NOT NULL,
    FIRSTNAME    VARCHAR2(50) NOT NULL,
    LASTNAME    VARCHAR2(50) NOT NULL,
    EMAIL        VARCHAR2(50) NOT NULL UNIQUE,
    PHONE_NUMBER VARCHAR(10) NOT NULL,
    ADDRESS      VARCHAR2(50) NOT NULL,
    CITY         VARCHAR2(10) NOT NULL,
    STATE        VARCHAR2(50) NOT NULL,
    ZIPCODE      NUMBER NOT NULL,
    USERNAME     VARCHAR2(50) NOT NULL,
    PASSWORD     VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_CUSTOMER_ID PRIMARY KEY (CUSTOMER_ID)
);
/

CREATE TABLE SUPPLIER(
    SUPPLIER_ID   NUMBER NOT NULL,
    SUPPLIER_NAME VARCHAR2(50) NOT NULL,
    CONTACTFNAME  VARCHAR2(50) NOT NULL,
    CONTACTLNAME  VARCHAR2(50) NOT NULL,
    CONTACT_TITLE VARCHAR2(50) NOT NULL,
    ADDRESS       VARCHAR2(100) NOT NULL,
    CITY          VARCHAR2(50) NOT NULL,
    STATE         VARCHAR2(50) NOT NULL,
    EMAIL         VARCHAR2(50) NOT NULL UNIQUE,
    ACTIVE        NUMBER(1,0) NOT NULL,
    CONSTRAINT PK_SUPPLIER_ID PRIMARY KEY (SUPPLIER_ID)
);
/

CREATE TABLE WAREHOUSE(
    WAREHOUSE_ID NUMBER NOT NULL,
    ADDRESS      VARCHAR2(50) NOT NULL,
    CITY         VARCHAR2(50) NOT NULL,
    STATE        VARCHAR2(50) NOT NULL,
    ZIPCODE      NUMBER NOT NULL,
    CAPACITY     NUMBER NOT NULL,
    CONSTRAINT PK_WAREHOUSE_ID PRIMARY KEY (WAREHOUSE_ID)
);
/

CREATE TABLE PRODUCT_CATEGORY (
    CATEGORY_ID   NUMBER NOT NULL,
    CATEGORY_NAME VARCHAR2(50) NOT NULL,
    DESCRIPTION   VARCHAR2(100),
    CONSTRAINT PK_CATEGORY_ID PRIMARY KEY (CATEGORY_ID)
);
/

CREATE TABLE PRODUCT(
    PRODUCT_ID      NUMBER NOT NULL,
    CATEGORY_ID     NUMBER NOT NULL,
    SUPPLIER_ID     NUMBER NOT NULL,
    WAREHOUSE_ID    NUMBER NOT NULL,
    PRODUCT_NAME    VARCHAR2(50) NOT NULL,
    DESCRIPTION     VARCHAR2(50) NOT NULL,
    AVAILABLE_UNITS NUMBER NOT NULL,
    TOTAL_UNITS     NUMBER NOT NULL,
    UNIT_PRICE      NUMBER NOT NULL,
    CONSTRAINT PK_PRODUCT_ID PRIMARY KEY (PRODUCT_ID),
    CONSTRAINT FK_PRODUCT_CATEGORY_ID
    FOREIGN KEY (CATEGORY_ID)
    REFERENCES PRODUCT_CATEGORY(CATEGORY_ID),
    CONSTRAINT FK_PRODUCT_WAREHOUSE_ID
    FOREIGN KEY (WAREHOUSE_ID)
    REFERENCES WAREHOUSE(WAREHOUSE_ID)
);
/

CREATE TABLE ORDERS
(
    ORDER_ID Number Not Null,
    CUSTOMER_ID Number Not Null,
    PRODUCT_ID Number Not Null,
    QUANTITY Number Not Null,
    TOTALCOST Number Not Null,
    ORDERDATE TIMESTAMP,
    CONSTRAINT PK_Order_ID PRIMARY KEY (ORDER_ID),
    CONSTRAINT FK_ORDER_CUSTOMER_ID
    FOREIGN KEY (CUSTOMER_ID)
    REFERENCES CUSTOMER(CUSTOMER_ID),
    CONSTRAINT FK_ORDER_PRODUCT_ID
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT(PRODUCT_ID)
);
/

CREATE TABLE RETURNS (
    RETURN_ID Number Not Null,
    ORDER_ID Number Not Null,
    REASON VARCHAR2(50)Not Null,
    QUANTITY Number Not Null,
    RETURN_DATE TIMESTAMP,
    CONSTRAINT PK_RETURN_ID PRIMARY KEY (RETURN_ID),
    CONSTRAINT FK_RETURN_ORDER_ID
    FOREIGN KEY (ORDER_ID)
    REFERENCES ORDERS(ORDER_ID)
);

CREATE TABLE PAYMENT_METHOD
(
    PMETHOD_ID Number Not Null,
    METHOD_NAME VARCHAR2(50)Not Null,
    CONSTRAINT PK_PAYMENT_METHOD_ID PRIMARY KEY (PMETHOD_ID)
);
CREATE TABLE INVOICE  (
    INVOICE_ID Number Not Null,
    ORDER_ID Number Not Null,
    PMETHOD_ID Number Not Null,
    ORDER_STATUS VARCHAR2(50)Not Null,
    PAYMENT_STATUS VARCHAR2(50)Not Null,
    INVOICE_DATE TIMESTAMP,
    CONSTRAINT PK_INVOICE_ID PRIMARY KEY (INVOICE_ID),
    CONSTRAINT FK_INVOICE_ORDER_ID FOREIGN KEY (ORDER_ID)
    REFERENCES ORDERS(ORDER_ID),
    CONSTRAINT FK_INVOICE_PAYMENT_METHOD_ID
    FOREIGN KEY (PMETHOD_ID)
    REFERENCES PAYMENT_METHOD(PMETHOD_ID)
);

CREATE OR REPLACE FUNCTION is_number (p_string IN VARCHAR2)
   RETURN INT
IS
   v_new_num NUMBER;
BEGIN
   v_new_num := TO_NUMBER(p_string);
   RETURN 1;
EXCEPTION
WHEN VALUE_ERROR THEN
   RETURN 0;
END is_number;
/



